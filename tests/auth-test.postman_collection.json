{
	"info": {
		"_postman_id": "7a93c9b2-4ef5-464f-a0a5-fa76e164f9e2",
		"name": "auth-test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "register user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(pm.request.body)",
							"var responseJSON = JSON.parse(responseBody)",
							"console.log(responseJSON)",
							"pm.collectionVariables.set(\"username\", responseJSON[\"username\"])"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Host",
						"value": "arch.homework",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\": \"ivan-{{$timestamp}}\",\n    \"firstName\": \"Ivan\",\n    \"lastName\": \"Ivanov\",\n    \"email\": \"ivan@test.te\",\n    \"phone\": \"00000000000\",\n    \"password\": \"qwerty\"\n}"
				},
				"url": {
					"raw": "http://{{baseUrl}}/register",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "update user profile should fall",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(pm.request.body)",
							"var responseJSON = JSON.parse(responseBody)",
							"console.log(responseJSON)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\": \"ivan-ivanov-{{username}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/otusapp/aleksandr-palyvoda/users/me",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"otusapp",
						"aleksandr-palyvoda",
						"users",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "get user profile should fall",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(pm.request.body)",
							"var responseJSON = JSON.parse(responseBody)",
							"console.log(responseJSON)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/otusapp/aleksandr-palyvoda/users/me",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"otusapp",
						"aleksandr-palyvoda",
						"users",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "login user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(pm.request.body)",
							"var responseJSON = JSON.parse(responseBody)",
							"console.log(responseJSON)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\": \"{{username}}\",\n    \"password\": \"qwerty\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/login",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "get user profile not updated",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(pm.request.body)",
							"var responseJSON = JSON.parse(responseBody)",
							"console.log(responseJSON)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/otusapp/aleksandr-palyvoda/users/me",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"otusapp",
						"aleksandr-palyvoda",
						"users",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "update user profile should be successful",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(pm.request.body)",
							"var responseJSON = JSON.parse(responseBody)",
							"console.log(responseJSON)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\": \"ivan-ivanov\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/otusapp/aleksandr-palyvoda/users/me",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"otusapp",
						"aleksandr-palyvoda",
						"users",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "get user profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(pm.request.body)",
							"var responseJSON = JSON.parse(responseBody)",
							"console.log(responseJSON)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/otusapp/aleksandr-palyvoda/users/me",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"otusapp",
						"aleksandr-palyvoda",
						"users",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "logout user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(pm.request.body)",
							"var responseJSON = JSON.parse(responseBody)",
							"console.log(responseJSON)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Host",
						"value": "arch.homework",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://{{baseUrl}}/logout",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"logout"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "arch.homework"
		},
		{
			"key": "username",
			"value": ""
		}
	]
}